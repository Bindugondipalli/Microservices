<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="com.cts.adb.dao.GroupRepository"/>
<fullyQualifiedTypeName name="com.cts.adb.Entity.GroupEntity"/>
<fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Table"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.cts.adb.dao.ContactRepository"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="com.cts.adb.model.ContactModel"/>
<fullyQualifiedTypeName name="com.cts.adb.Entity.ContactEntity"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="com.cts.adb.service.GroupProxyService"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="com.cts.adb.model.GroupModel"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="com.cts.demo.DAO.UserDAO"/>
<fullyQualifiedTypeName name="com.cts.demo.model.User"/>
<fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
<fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
<fullyQualifiedTypeName name="org.springframework.test.context.junit4.SpringRunner"/>
<fullyQualifiedTypeName name="lombok.Data"/>
</qualifiedTypeNameHistroy>
